[{"/home/okamoto-pmp/repo/forks/Tableau-Extension-ExportAll/src/index.js":"1","/home/okamoto-pmp/repo/forks/Tableau-Extension-ExportAll/src/serviceWorker.js":"2","/home/okamoto-pmp/repo/forks/Tableau-Extension-ExportAll/src/containers/Main.js":"3","/home/okamoto-pmp/repo/forks/Tableau-Extension-ExportAll/src/components/Configure/Configure.js":"4","/home/okamoto-pmp/repo/forks/Tableau-Extension-ExportAll/src/components/Extension/Extension.js":"5","/home/okamoto-pmp/repo/forks/Tableau-Extension-ExportAll/src/components/DesktopExport/DesktopExport.js":"6","/home/okamoto-pmp/repo/forks/Tableau-Extension-ExportAll/src/components/Configure/SelectSheets/SelectSheets.js":"7","/home/okamoto-pmp/repo/forks/Tableau-Extension-ExportAll/src/components/Configure/SelectColumns/SelectColumns.js":"8","/home/okamoto-pmp/repo/forks/Tableau-Extension-ExportAll/src/components/Configure/ActionButtons/ActionButtons.js":"9","/home/okamoto-pmp/repo/forks/Tableau-Extension-ExportAll/src/components/Configure/ConfigureTab/ConfigureTab.js":"10","/home/okamoto-pmp/repo/forks/Tableau-Extension-ExportAll/src/components/func/func.js":"11","/home/okamoto-pmp/repo/forks/Tableau-Extension-ExportAll/src/components/Extension/ExportBtn/ExportBtn.js":"12","/home/okamoto-pmp/repo/forks/Tableau-Extension-ExportAll/src/components/Configure/SelectSheets/Sheet/Sheet.js":"13","/home/okamoto-pmp/repo/forks/Tableau-Extension-ExportAll/src/components/Configure/SelectColumns/Sheet/Sheet.js":"14","/home/okamoto-pmp/repo/forks/Tableau-Extension-ExportAll/src/components/Configure/SelectColumns/Sheet/Column/Column.js":"15"},{"size":536,"mtime":1724048422734,"results":"16","hashOfConfig":"17"},{"size":4951,"mtime":1724048422734,"results":"18","hashOfConfig":"17"},{"size":5565,"mtime":1724251373083,"results":"19","hashOfConfig":"17"},{"size":7566,"mtime":1724250509141,"results":"20","hashOfConfig":"17"},{"size":6353,"mtime":1724251629004,"results":"21","hashOfConfig":"17"},{"size":2332,"mtime":1724048422734,"results":"22","hashOfConfig":"17"},{"size":688,"mtime":1724048422734,"results":"23","hashOfConfig":"17"},{"size":786,"mtime":1724048422734,"results":"24","hashOfConfig":"17"},{"size":744,"mtime":1724048422734,"results":"25","hashOfConfig":"17"},{"size":1874,"mtime":1724048422734,"results":"26","hashOfConfig":"17"},{"size":15314,"mtime":1724252141365,"results":"27","hashOfConfig":"17"},{"size":280,"mtime":1724048422734,"results":"28","hashOfConfig":"17"},{"size":2853,"mtime":1724048422734,"results":"29","hashOfConfig":"17"},{"size":683,"mtime":1724048422734,"results":"30","hashOfConfig":"17"},{"size":2943,"mtime":1724048422734,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18nd0xp",{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/okamoto-pmp/repo/forks/Tableau-Extension-ExportAll/src/index.js",[],"/home/okamoto-pmp/repo/forks/Tableau-Extension-ExportAll/src/serviceWorker.js",[],"/home/okamoto-pmp/repo/forks/Tableau-Extension-ExportAll/src/containers/Main.js",[],"/home/okamoto-pmp/repo/forks/Tableau-Extension-ExportAll/src/components/Configure/Configure.js",[],"/home/okamoto-pmp/repo/forks/Tableau-Extension-ExportAll/src/components/Extension/Extension.js",["63"],"import React, { useEffect } from 'react';\nimport ExportBtn from './ExportBtn/ExportBtn';\nimport { initializeMeta, revalidateMeta, saveSettings, setSettings, exportToExcel, downloadCrosstab } from '../func/func';\nimport compareVersions from 'compare-versions';\n\n// Declare this so our linter knows that tableau is a global object\n/* global tableau */\n\nfunction Extension(props) {\n\n  useEffect(() => {\n    console.log('[Extension.js] Props Changed', props);\n  }, [props]);\n\n  useEffect(() => {\n    console.log('[Extension.js] useEffect');\n    //console.log('[Extension.js] Initialise Extension', props);\n    //Initialise Extension\n    tableau.extensions.initializeAsync({ 'configure': configure }).then(() => {\n\n      let metaVersion = tableau.extensions.settings.get('metaVersion');\n\n      if (metaVersion) {\n        console.log('[Extension.js] Meta Version', metaVersion);\n        props.updateMetaVersion(metaVersion);\n      } else {\n        console.log('[Extension.js] Meta Version', 1);\n        metaVersion = 1;\n        props.updateMetaVersion(1);\n      }\n\n      let sheetSettings = tableau.extensions.settings.get('selectedSheets');\n\n      if (sheetSettings && sheetSettings != null) {\n        console.log('[Extension.js] Existing Sheet Settings Found', JSON.parse(sheetSettings));\n        props.updateMeta(JSON.parse(sheetSettings));\n        props.disableButton(false);\n      } else {\n        console.log('[Extension.js] Can\\'t find existing sheet settings');\n        initializeMeta()\n          .then(meta => {\n            props.updateMeta(meta);\n            setSettings('sheets', meta);\n            setSettings('label', 'Export All');\n            return saveSettings();\n          })\n          .then(meta => configure(meta));\n      }\n\n      let labelSettings = tableau.extensions.settings.get('buttonLabel');\n\n      if (labelSettings && labelSettings != null) {\n        labelSettings = labelSettings.replace(/\"/g, '');\n        console.log('[Extension.js] initializeAsync Existing Label Settings Found', labelSettings);\n        props.updateLabel(labelSettings);\n      }\n\n      let styleSettings = tableau.extensions.settings.get('buttonStyle');\n\n      if (styleSettings && styleSettings != null) {\n        console.log('[Extension.js] initializeAsync Existing Label Style Found', styleSettings);\n        props.updateButtonStyle(styleSettings);\n      }\n\n      let filenameSettings = tableau.extensions.settings.get('filename');\n\n      if (filenameSettings && filenameSettings != null) {\n        console.log('[Extension.js] initializeAsync Existing Filename Found', filenameSettings);\n        props.updateFilename(filenameSettings);\n      }\n\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function refreshSettings() {\n    let sheetSettings = tableau.extensions.settings.get('selectedSheets');\n\n    if (sheetSettings && sheetSettings != null) {\n      const existingSettings = JSON.parse(sheetSettings);\n      console.log('[Extension.js] refreshSettings Existing Sheet Settings Found. Refreshing', JSON.stringify(existingSettings));\n      revalidateMeta(existingSettings)\n        .then(meta => {\n          console.log('[Extension.js] refreshSettings settings revalidated', JSON.stringify(meta));\n          props.updateMeta(meta);\n          props.disableButton(false);\n        });\n    }\n\n    let labelSettings = tableau.extensions.settings.get('buttonLabel');\n\n    if (labelSettings && labelSettings != null) {\n      labelSettings = labelSettings.replace(/\"/g, '');\n      console.log('[Extension.js] refreshSettings Existing Label Settings Found', labelSettings);\n      props.updateLabel(labelSettings);\n    }\n\n    let styleSettings = tableau.extensions.settings.get('buttonStyle');\n\n    if (styleSettings && styleSettings != null) {\n      console.log('[Extension.js] refreshSettings Existing Label Style Found', styleSettings);\n      props.updateButtonStyle(styleSettings);\n    }\n\n    let filenameSettings = tableau.extensions.settings.get('filename');\n\n    if (filenameSettings && filenameSettings != null) {\n      console.log('[Extension.js] refreshSettings Existing Filename Found', filenameSettings);\n      props.updateFilename(filenameSettings);\n    }\n  }\n\n  function configure() {\n    console.log('[Extension.js] Opening configure popup');\n    const popupUrl = `${window.location.origin}/configure`;\n    tableau.extensions.ui.displayDialogAsync(popupUrl, null, { height: 500, width: 500 }).then((closePayload) => {\n      refreshSettings();\n      console.log('[Extension.js] Config window closed', props)\n    }).catch((error) => {\n      switch (error.errorCode) {\n        case tableau.ErrorCodes.DialogClosedByUser:\n          console.log('[Extension.js] Dialog was closed by user');\n          refreshSettings();\n          break;\n        default:\n          console.error('[Extension.js]', error.message);\n      }\n    });\n  }\n\n  function clickExportHandler() {\n    let sheetSettings = tableau.extensions.settings.get('selectedSheets');\n    const meta = JSON.parse(sheetSettings);\n    downloadCrosstab(meta, props.filename);\n    if (tableau.extensions.environment.context === \"server\") {\n      // exportToExcel(meta, 'server', props.filename);\n      // downloadCrosstab(meta, props.filename);\n    } else {\n      console.log('[Extension.js] Tableau Version', tableau.extensions.environment.tableauVersion);\n      if (compareVersions.compare(tableau.extensions.environment.tableauVersion, '2019.4.0', '>=')) {\n        // exportToExcel(meta, 'desktop', props.filename);\n        // downloadCrosstab(meta, props.filename);\n      } else {\n        desktopExportHandler();\n      }\n    }\n  }\n\n  function desktopExportHandler() {\n    const popupUrl = `${window.location.origin}/desktopexport`;\n    tableau.extensions.ui.displayDialogAsync(popupUrl, '', { height: 350, width: 400 }).then((closePayload) => {\n      console.log('[Extension.js] Export window closed')\n    }).catch((error) => {\n      switch (error.errorCode) {\n        case tableau.ErrorCodes.DialogClosedByUser:\n          console.log('[Extension.js] Export window was closed by user');\n          break;\n        default:\n          console.error('[Extension.js]', error.message);\n      }\n    });\n  }\n\n  return (\n    <ExportBtn label={props.label} style={props.style} disabled={props.disabled} export={clickExportHandler}></ExportBtn>\n  );\n}\n\nexport default Extension;\n","/home/okamoto-pmp/repo/forks/Tableau-Extension-ExportAll/src/components/DesktopExport/DesktopExport.js",[],"/home/okamoto-pmp/repo/forks/Tableau-Extension-ExportAll/src/components/Configure/SelectSheets/SelectSheets.js",[],"/home/okamoto-pmp/repo/forks/Tableau-Extension-ExportAll/src/components/Configure/SelectColumns/SelectColumns.js",[],"/home/okamoto-pmp/repo/forks/Tableau-Extension-ExportAll/src/components/Configure/ActionButtons/ActionButtons.js",[],"/home/okamoto-pmp/repo/forks/Tableau-Extension-ExportAll/src/components/Configure/ConfigureTab/ConfigureTab.js",[],"/home/okamoto-pmp/repo/forks/Tableau-Extension-ExportAll/src/components/func/func.js",[],"/home/okamoto-pmp/repo/forks/Tableau-Extension-ExportAll/src/components/Extension/ExportBtn/ExportBtn.js",[],"/home/okamoto-pmp/repo/forks/Tableau-Extension-ExportAll/src/components/Configure/SelectSheets/Sheet/Sheet.js",[],"/home/okamoto-pmp/repo/forks/Tableau-Extension-ExportAll/src/components/Configure/SelectColumns/Sheet/Sheet.js",[],"/home/okamoto-pmp/repo/forks/Tableau-Extension-ExportAll/src/components/Configure/SelectColumns/Sheet/Column/Column.js",[],{"ruleId":"64","severity":1,"message":"65","line":3,"column":69,"nodeType":"66","messageId":"67","endLine":3,"endColumn":82},"no-unused-vars","'exportToExcel' is defined but never used.","Identifier","unusedVar"]